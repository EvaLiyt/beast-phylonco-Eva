package substitutionmodel;

import beast.core.parameter.RealParameter;
import org.junit.Test;

import static org.junit.Assert.assertArrayEquals;

public class K80DiploidTest {
    private static double DELTA = 1e-10;

    private K80Diploid model;
    private int nrStates;

    public void setupModel(Double kappa, Double lambdaL) {
        model = new K80Diploid();
        model.initByName(
                "kappa", new RealParameter(kappa.toString()),
                "lambdaL", new RealParameter(lambdaL.toString())
        );
        nrStates = model.getStateCount();
    }

    @Test
    public void testTransitionLong() {
        double t = 10;
        setupModel(3.0, 2.0);
        double[] expected = new double[] {
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899,
                0.0573932493193, 0.0717236568348, 0.0525823333895, 0.1722820882320, 0.0675356817034, 0.0560973336477, 0.1600000482827, 0.0414018951317, 0.1587727223692, 0.1622109910899
        };
        double[] observed = new double[nrStates * nrStates];
        model.getTransitionProbabilities(null, t, 0, 1, observed);
        assertArrayEquals(expected, observed, DELTA);
    }
}
