N0_con ~ LogNormal(meanlog=5, sdlog=0.3);
constantPopFunc = constantPopFunc(N0=N0_con);

b_exp ~ LogNormal(meanlog=2, sdlog=0.5);
N0_exp ~ LogNormal(meanlog=5, sdlog=0.3);
exponentialPopFunc = exponentialPopFunc(GrowthRate=b_exp, N0=N0_exp);

t50_gom ~ LogNormal(meanlog=0.3, sdlog=0.1);
b_gom ~ LogNormal(meanlog=2, sdlog=0.5);
NInf_gomp ~ LogNormal(meanlog=5, sdlog=0.3);
gompertzPopFunc = gompertzPopFunc_t50(NInfinity=NInf_gomp, t50=t50_gom, b=b_gom);

t50_log ~ LogNormal(meanlog=0.3, sdlog=0.1);
b_log ~ LogNormal(meanlog=2, sdlog=0.5);
Ninf_log ~ LogNormal(meanlog=5, sdlog=0.3);
logisticPopFunc = logisticPopFunc(t50=t50_log, nCarryingCapacity=Ninf_log, b=b_log);

models = [constantPopFunc, exponentialPopFunc, logisticPopFunc, gompertzPopFunc];

I ~ UniformDiscrete(lower=0, upper=length(models)-1);
//I ~ Uniform(lower=0, upper=length(models)-1);


SVSmodel = stochasticVariableSelection(indicator=I, models=models);

//π ~ Dirichlet(conc=[30.0, 3.0, 3.0, 3.0, 3.0, 30.0, 3.0, 3.0, 3.0, 3.0, 30.0, 3.0, 3.0, 3.0, 3.0, 30.0]);
//rates ~ Dirichlet(conc=[1.0, 2.0, 1.0, 1.0, 2.0, 1.0]);
//Q = gt16(rates=rates, freq=π);
//ψ ~ CoalescentPopFunc(n=4, popFunc=SVSmodel);
//A ~ PhyloCTMC(L=10, Q=Q, dataType=phasedGenotype(), mu=0.01, tree=ψ);
//epsilon ~ Beta(alpha=2, beta=999);
//delta ~ Beta(alpha=1.5, beta=4.5);
//E ~ GT16ErrorModel(delta=delta, epsilon=epsilon, alignment=A);
//D = unphase(alignment=E);

tree ~CoalescentPopFunc(n=10, popFunc=SVSmodel);
D ~ PhyloCTMC(L=20, Q=jukesCantor(),mu=0.01, tree=tree);
